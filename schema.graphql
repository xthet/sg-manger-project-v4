type _Schema_ @fulltext(
  name: "campaignSearch"
  language: en
  algorithm: rank
  include: [
    {entity: "CampaignAdded", fields:[{name: "title"}, {name: "description"}, {name: "tags"} {name: "category"}]},
    {entity: "UserAdded", fields:[{name: "username"}]}
  ]
)

type CrowdFunder @entity {
  id:ID!
  campaignCount: BigInt
  trueAmount: BigInt
  donationCount: BigInt
  creatorCount: BigInt
}

type CampaignAdded @entity {
  id: ID!
  campaignAddress: Bytes!
  creator: Bytes!
  title: String!
  description: String!
  category: String!
  tags: String!
  imageURI: String!
  funders: [Bytes!]!
  funderCount: BigInt!
  createdAt: BigInt!
  isPublished: Boolean!
}

type CampaignFunded @entity {
  id: ID!
  funder: Bytes!
  campaignAddress: Bytes!
  createdAt: BigInt!
}

type CampaignRemoved @entity {
  id: ID!
  campaignAddress: Bytes!
  createdAt: BigInt!
}

type CampaignShrunk @entity {
  id: ID!
  withdrawer: Bytes!
  campaignAddress: Bytes!
  createdAt: BigInt!
}

type UserAdded @entity {
  id: ID!
  address: Bytes!
  username: String
  twitter: String
  email: String
  homeAddr: String
  created: [Bytes!]!
  backed: [Bytes!]!
  published: [Bytes!]!
  totalRaised: BigInt!
  publishedCount: BigInt
  backedCount: BigInt
  createdAt: BigInt!
  pfp: String
}

type CampaignPublished @entity {
  id: ID!
  address: Bytes!
}