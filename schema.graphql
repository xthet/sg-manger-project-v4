type _Schema_ @fulltext(
  name: "campaignSearch"
  language: en
  algorithm: rank
  include: [
    {entity: "CampaignAdded", fields:[{name: "title"}, {name: "description"}, {name: "tags"} {name: "category"}]},
    {entity: "UserAdded", fields:[{name: "username"}]}
  ]
)

type CrowdFunder @entity {
  id:ID!
  campaignCount: BigInt # --
  trueAmount: BigInt # --
  donationCount: BigInt # --
  creatorCount: BigInt # --
}

type CampaignAdded @entity {
  id: ID!
  campaignAddress: Bytes!
  creator: Bytes!
  title: String!
  description: String!
  category: String!
  tags: String!
  imageURI: String!
  funders: [Bytes!]! # --
  funderCount: BigInt! # --
  createdAt: BigInt! # -- 
  isPublished: Boolean! # --
}

type CampaignFunded @entity {
  id: ID!
  val: BigInt!
  funder: Bytes!
  campaignAddress: Bytes!
  createdAt: BigInt!
  creator: Bytes!
}

type CampaignRemoved @entity {
  id: ID!
  campaignAddress: Bytes!
  createdAt: BigInt!
}

type CampaignShrunk @entity {
  id: ID!
  withdrawer: Bytes!
  campaignAddress: Bytes!
  createdAt: BigInt!
  val: BigInt!
  creator: Bytes!
}

type UserAdded @entity {
  id: ID!
  address: Bytes!
  username: String
  email: String
  shipAddr: String # shipping address
  created: [Bytes!]! # cmps youve created --
  backed: [Bytes!]! # cmps youve backed --
  totalRaised: BigInt! # total amount raised across all cmps --
  totalDonated: BigInt! # total donated across all cmps --
  publishedCount: BigInt # amount of cmps published --
  backedCount: BigInt # amount of cmps backed --
  createdAt: BigInt! # date user created account --
  pfp: String # user pfp
}

type CampaignPublished @entity {
  id: ID!
  address: Bytes!
}